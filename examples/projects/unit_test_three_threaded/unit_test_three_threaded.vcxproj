<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Android">
      <Configuration>Debug</Configuration>
      <Platform>Android</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|NaCl32">
      <Configuration>Debug</Configuration>
      <Platform>NaCl32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|NaCl64">
      <Configuration>Debug</Configuration>
      <Platform>NaCl64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|PPAPI">
      <Configuration>Debug</Configuration>
      <Platform>PPAPI</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Android">
      <Configuration>Release</Configuration>
      <Platform>Android</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|NaCl32">
      <Configuration>Release</Configuration>
      <Platform>NaCl32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|NaCl64">
      <Configuration>Release</Configuration>
      <Platform>NaCl64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|PPAPI">
      <Configuration>Release</Configuration>
      <Platform>PPAPI</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{B3987186-B4D4-4555-937C-D3ED79D89773}</ProjectGuid>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Debug|Android'">
    <AndroidAPILevel>android-8</AndroidAPILevel>
    <PlatformToolset>arm-linux-androideabi-4.6</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Release|Android'">
    <AndroidAPILevel>android-8</AndroidAPILevel>
    <PlatformToolset>arm-linux-androideabi-4.6</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Android'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|PPAPI'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Android'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|PPAPI'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.AllPlatforms.user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Android'">
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl32'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <VSNaClSDKRoot>$(nacl_sdk_root)</VSNaClSDKRoot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl64'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <VSNaClSDKRoot>$(nacl_sdk_root)</VSNaClSDKRoot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|PPAPI'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <TargetPath>$(OutDir)$(TargetName)$(TargetExt)</TargetPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Android'">
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl32'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <VSNaClSDKRoot>$(nacl_sdk_root)</VSNaClSDKRoot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl64'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <VSNaClSDKRoot>$(nacl_sdk_root)</VSNaClSDKRoot>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|PPAPI'">
    <NaClAddInVersion>1</NaClAddInVersion>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <TargetPath>$(OutDir)$(TargetName)$(TargetExt)</TargetPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <IntDir>$(Platform)\$(Configuration)\</IntDir>
    <OutDir>$(ProjectDir)$(Platform)\$(Configuration)\</OutDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Android'">
    <AntBuild>
      <AntBuildPath>$(ProjectDir)\android_package</AntBuildPath>
    </AntBuild>
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_ANDROID;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <GccExceptionHandling>true</GccExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <Warnings>AllWarnings</Warnings>
      <WarningsAsErrors>true</WarningsAsErrors>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if defined grail42_core_cmd (if defined GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_ANDROID (%grail42_core_cmd%\android\faux_console\run_app.cmd net.examples.unit_test_three_threaded .FauxConsole) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_ANDROID is not defined)) else (echo Skipping test execution as grail42_core_cmd is not defined)</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>-lCppUTest_$(Platform);-lgtest_$(Platform);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl32'">
    <PostBuildEvent>
      <Command>
        set PATH=$(Path)
        if not exist nacl mkdir nacl
        python.exe "$(VSNaClSDKRoot)\tools\create_nmf.py" -D "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\bin\x86_64-nacl-objdump.exe" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib32" -o nacl\$(ProjectName).nmf -t $(ToolchainName) -s nacl "$(TargetPath)"
      </Command>
      <Message>Creating NMF</Message>
    </PostBuildEvent>
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;NACL;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform);gtest_$(Platform);%(AdditionalDependencies);nosys</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|NaCl64'">
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;NACL;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <Warnings>AllWarnings</Warnings>
      <WarningsAsErrors>true</WarningsAsErrors>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform);gtest_$(Platform);%(AdditionalDependencies);nosys</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Creating NMF and executing unit test</Message>
      <Command>
        set PATH=$(Path)
        if not exist nacl mkdir nacl
        python.exe "$(VSNaClSDKRoot)\tools\create_nmf.py" -D "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\bin\x86_64-nacl-objdump.exe" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib32" -o nacl\$(ProjectName).nmf -t $(ToolchainName) -s nacl "$(TargetPath)"
        if defined grail42_core_cmd (if not defined GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL (%grail42_core_cmd%\nacl\run_nexe_standalone.cmd $(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL is defined)) else (echo Skipping test execution as grail42_core_cmd is not defined)
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|PPAPI'">
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;PPAPI;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if not defined GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL ($(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL is defined)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if defined GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_X64 ($(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_X64 is not defined)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Android'">
    <AntBuild>
      <AntBuildPath>$(ProjectDir)\android_package</AntBuildPath>
      <AntBuildType>Debug</AntBuildType>
    </AntBuild>
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_ANDROID;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <GccExceptionHandling>true</GccExceptionHandling>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if defined grail42_core_cmd (if defined GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_ANDROID (%grail42_core_cmd%\android\faux_console\run_app.cmd net.examples.unit_test_three_threaded .FauxConsole) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_ANDROID is not defined)) else (echo Skipping test execution as grail42_core_cmd is not defined)</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>-lCppUTest_$(Platform);-lgtest_$(Platform);%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl32'">
    <PostBuildEvent>
      <Command>
        set PATH=$(Path)
        if not exist nacl mkdir nacl
        python.exe "$(VSNaClSDKRoot)\tools\create_nmf.py" -D "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\bin\x86_64-nacl-objdump.exe" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib32" -o nacl\$(ProjectName).nmf -t $(ToolchainName) -s nacl "$(TargetPath)"
      </Command>
      <Message>Creating NMF</Message>
    </PostBuildEvent>
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;NACL;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform);gtest_$(Platform);%(AdditionalDependencies);nosys</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|NaCl64'">
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;NACL;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-std=c++0x -U__STRICT_ANSI__ %(AdditionalOptions)</AdditionalOptions>
      <Warnings>AllWarnings</Warnings>
      <WarningsAsErrors>true</WarningsAsErrors>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform);gtest_$(Platform);%(AdditionalDependencies);nosys</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Creating NMF and executing unit test</Message>
      <Command>
        set PATH=$(Path)
        if not exist nacl mkdir nacl
        python.exe "$(VSNaClSDKRoot)\tools\create_nmf.py" -D "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\bin\x86_64-nacl-objdump.exe" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib" -L "$(VSNaClSDKRoot)\toolchain\win_x86_$(ToolchainName)\x86_64-nacl\lib32" -o nacl\$(ProjectName).nmf -t $(ToolchainName) -s nacl "$(TargetPath)"
        if defined grail42_core_cmd (if not defined GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL (%grail42_core_cmd%\nacl\run_nexe_standalone.cmd $(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL is defined)) else (echo Skipping test execution as grail42_core_cmd is not defined)
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|PPAPI'">
    <ClCompile>
      <PreprocessorDefinitions>HWC_PLATFORM_NACL;PPAPI;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <WarningLevel>Level4</WarningLevel>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalIncludeDirectories>$(ProjectDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;$(PreprocessorDefinitions)</PreprocessorDefinitions>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if not defined GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL ($(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_DISABLE_ALL is defined)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <TreatWarningAsError>true</TreatWarningAsError>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>cpputest_$(Platform).lib;gtest_$(Platform).lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Message>Executing unit test</Message>
      <Command>if defined GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_X64 ($(TargetPath)) else (echo skipping test execution as GRAIL42_TEST_POST_BUILD_EXECUTION_ENABLE_X64 is not defined)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="android_package\AndroidManifest.xml" />
    <None Include="android_package\build.xml" />
    <None Include="android_package\project.properties" />
    <None Include="android_package\res\values\strings.xml" />
    <None Include="android_package\src\net\examples\unit_test_three_threaded\FauxConsole.java" />
    <None Include="index.html" />
    <None Include="readme.txt" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="stdafx.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="thread1.cpp" />
    <ClCompile Include="thread2.cpp" />
    <ClCompile Include="thread3.cpp" />
    <ClCompile Include="unit_test_three_threaded.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>